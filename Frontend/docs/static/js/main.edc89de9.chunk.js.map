{"version":3,"sources":["Services/Equipos.service.js","Components/Form.js","Components/Cards.js","Components/App.js","serviceWorker.js","index.js"],"names":["Delete","id","Promise","resolve","reject","fetch","method","headers","Content-Type","Id","mode","then","res","json","Docs","catch","err","Post","Team","body","JSON","stringify","Nombre","Estadio","UrlEscudo","UrlEstadio","Put","Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Agregar","value","Status","_this2","Sweet","fire","assign","_this3","react_default","a","createElement","className","type","required","onChange","e","setState","target","htmlFor","data-error","data-success","onClick","SubmitButton","bind","Component","Cards","SwalReact","Content","Swal","title","html","Form_Form","showConfirmButton","showCloseButton","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","_ref","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","Message","stop","_x","apply","arguments","src","PutTeam","DeleteTeam","App","Load","Teams","_callee","_context","_x2","GetAll","href","Hola","AddTeam","_callee5","_context5","abrupt","sent","map","item","i","Cards_Cards","key","Boolean","window","location","hostname","match","ReactDOM","render","Components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.edc89de9.chunk.js","sourcesContent":["//Metodo para obtener todos los valores\r\nexport const Get = () => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch('https://crud-firebase.herokuapp.com/Get', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      mode: 'cors'\r\n    })\r\n      .then(res => res.json())\r\n      .then(Docs => resolve(Docs))\r\n      .catch(err => reject(err));\r\n  });\r\n};\r\n\r\n//Metodo para eliminar un documento\r\nexport const Delete = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch('https://crud-firebase.herokuapp.com/Delete', {\r\n      method: 'DELETE',\r\n      headers: { 'Content-Type': 'application/json', 'Id': id },\r\n      mode: 'cors'\r\n    })\r\n      .then(res => res.json())\r\n      .then(Docs => resolve(Docs))\r\n      .catch(err => reject(err));\r\n  });\r\n};\r\n\r\n//Metodo para agregar equipo\r\nexport const Post = (Team) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch('https://crud-firebase.herokuapp.com/Post', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      mode: 'cors',\r\n      body: JSON.stringify({ 'Nombre': Team.Nombre, 'Estadio': Team.Estadio, 'UrlEscudo': Team.UrlEscudo, 'UrlEstadio': Team.UrlEstadio })\r\n    })\r\n      .then(res => res.json())\r\n      .then(Docs => resolve(Docs))\r\n      .catch(err => reject(err));\r\n  });\r\n};\r\n\r\n//Metodo para actualizar equipo\r\nexport const Put = (Team) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch('https://crud-firebase.herokuapp.com/Put', {\r\n      method: 'Put',\r\n      headers: { 'Content-Type': 'application/json', 'Id': Team.Id },\r\n      mode: 'cors',\r\n      body: JSON.stringify({ 'Nombre': Team.Nombre, 'Estadio': Team.Estadio, 'UrlEscudo': Team.UrlEscudo, 'UrlEstadio': Team.UrlEstadio })\r\n    })\r\n      .then(res => res.json())\r\n      .then(Docs => resolve(Docs))\r\n      .catch(err => reject(err));\r\n  });\r\n};","import React, { Component } from \"react\";\r\nimport { Post, Put } from '../Services/Equipos.service';\r\n\r\nexport default class Form extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { Nombre: this.props.Nombre, Estadio: this.props.Estadio, UrlEstadio: this.props.UrlEstadio, UrlEscudo: this.props.UrlEscudo }\r\n    }\r\n\r\n    async SubmitButton() {\r\n        if (this.state.Nombre != '' && this.state.Estadio != '' && this.state.UrlEstadio != '' && this.state.UrlEscudo != '') {\r\n            if (this.props.Agregar) {\r\n                await Post(this.state).then(value => {\r\n                    value.Status == 200 ? this.props.Sweet.fire('Agregado', 'Actualiza para ver cambios', 'success') : this.props.Sweet('Error', 'Ha ocurrido un error vuelva a recargar', 'error');\r\n                }).catch(err => {\r\n                    this.props.Sweet.fire('Error', err + '', 'error');\r\n                });\r\n            } else {\r\n                await Put(Object.assign(this.state, { 'Id': this.props.Id })).then(value => {\r\n                    value.Status == 200 ? this.props.Sweet.fire('Editado', 'Actualiza para ver cambios', 'success') : this.props.Sweet('Error', 'Ha ocurrido un error vuelva a recargar', 'error');\r\n                }).catch(err => {\r\n                    this.props.Sweet.fire('Error', err + '', 'error');\r\n                });\r\n            }\r\n        } else {\r\n            this.props.Sweet.fire('Error', 'Complete los campos', 'error');\r\n        }\r\n    }\r\n\r\n    //Renderizo la vista\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col s12 left-alert\" method=\"POST\">\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s6\">\r\n                            <input id=\"Nombre\" type=\"text\" className=\"validate\" required value={this.state.Nombre} onChange={(e) => this.setState({ Nombre: e.target.value })}></input>\r\n                            <label htmlFor=\"Nombre\" data-error=\"Campo Requerido\" data-success=\"Correcto\">Nombre</label>\r\n                        </div>\r\n                        <div className=\"input-field col s6\">\r\n                            <input id=\"Estadio\" type=\"text\" className=\"validate\" required value={this.state.Estadio} onChange={(e) => this.setState({ Estadio: e.target.value })}></input>\r\n                            <label htmlFor=\"Estadio\" data-error=\"Campo Requerido\" data-success=\"Correcto\">Estadio</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s6\">\r\n                            <input id=\"UrlEstadio\" type=\"url\" className=\"validate\" required value={this.state.UrlEstadio} onChange={(e) => this.setState({ UrlEstadio: e.target.value })}></input>\r\n                            <label htmlFor=\"UrlEstadio\" data-error=\"Campo Requerido\" data-success=\"Correcto\">Url Estadio</label>\r\n                        </div>\r\n                        <div className=\"input-field col s6\">\r\n                            <input id=\"UrlEscudo\" type=\"url\" className=\"validate\" required value={this.state.UrlEscudo} onChange={(e) => this.setState({ UrlEscudo: e.target.value })}></input>\r\n                            <label htmlFor=\"UrlEscudo\" data-error=\"Campo Requerido\" data-success=\"Correcto\">UrlEscudo</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row center-align\">\r\n                        <button className=\"waves-effect waves-light btn\" type=\"submit\" onClick={this.SubmitButton.bind(this)}>Enviar</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Delete } from \"../Services/Equipos.service\";\r\nimport Swal from 'sweetalert2';\r\nimport Content from 'sweetalert2-react-content';\r\nimport Form from './Form';\r\n\r\nexport default class Cards extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    SwalReact = Content(Swal);\r\n\r\n    //Actualizar Equipo\r\n    async PutTeam() {\r\n        this.SwalReact.fire(\r\n            {\r\n                title: 'Actualizar Equipo',\r\n                html: <Form Nombre={this.props.Nombre} Estadio={this.props.Estadio} UrlEscudo={this.props.UrlEscudo} UrlEstadio={this.props.UrlEstadio} Agregar={false} Sweet={Swal} Id={this.props.Id}></Form>,\r\n                showConfirmButton: false,\r\n                showCloseButton: true\r\n            }\r\n        );\r\n    }\r\n\r\n    //Eliminar un equipo\r\n    async DeleteTeam() {\r\n        await Swal.fire(\r\n            {\r\n                title: '¿Estas seguro de eliminar este equipo?',\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#d33',\r\n                cancelButtonColor: '#3085d6',\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: 'Cerrar'\r\n            }\r\n        ).then(async value => {\r\n            if (value.value) {\r\n                await Delete(this.props.Id).then(value => {\r\n                    value.Status == 200 ? Swal.fire('Eliminado', 'Actualiza para ver cambios', 'success') : Swal('Error', 'Ha ocurrido un error vuelva a recargar', 'error')\r\n                }).catch(err => {\r\n                    Swal.fire('Error', err.Message, 'error');\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col center-align\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-image waves-effect waves-block waves-light\">\r\n                        <img className=\"activator\" src={this.props.UrlEstadio} />\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title activator grey-text text-darken-4\">\r\n                            {this.props.Nombre}\r\n                            <i className=\"material-icons right\">more_vert</i>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <a className=\"waves-effect waves-light btn-small blue-text text-accent-4\"onClick={this.PutTeam.bind(this)}>Editar</a>\r\n                        <a className=\"waves-effect waves-light btn-small red-text text-accent-4\" onClick={this.DeleteTeam.bind(this)}>Eliminar</a>\r\n                    </div>\r\n                    <div className=\"card-reveal center-align\">\r\n                        <span className=\"card-title grey-text text-darken-4\">\r\n                            <i className=\"material-icons right\">close</i>\r\n                        </span>\r\n                        <div className=\"card-image waves-effect waves-block waves-light\">\r\n                            <img src={this.props.UrlEscudo} />\r\n                        </div>\r\n                        <span className=\"grey-text text-darken-4\">\r\n                            Nombre: {this.props.Nombre}\r\n                            <br />\r\n                            Id: {this.props.Id}\r\n                            <br />\r\n                            Estadio: {this.props.Estadio}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport { Get, Delete } from \"../Services/Equipos.service\";\r\nimport Swal from 'sweetalert2';\r\nimport Content from 'sweetalert2-react-content';\r\nimport Form from './Form';\r\nimport Card from './Cards';\r\n\r\n//Componente principal\r\nclass App extends Component {\r\n\r\n  SwalReact = Content(Swal);\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { Load: false, Teams: [] };\r\n  }\r\n\r\n  //Agregar equipos modal\r\n  AddTeam() {\r\n    this.SwalReact.fire(\r\n      {\r\n        title: 'Agregar Equipo',\r\n        html: <Form Nombre='' Estadio='' UrlEscudo='' UrlEstadio='' Agregar={true} Sweet={Swal}></Form>,\r\n        showConfirmButton: false,\r\n        showCloseButton: true\r\n      }\r\n    );\r\n  }\r\n\r\n  //Eliminar un equipo\r\n  async DeleteTeam(id) {\r\n    await Swal.fire(\r\n      {\r\n        title: '¿Estas seguro de eliminar este equipo?',\r\n        type: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#d33',\r\n        cancelButtonColor: '#3085d6',\r\n        confirmButtonText: 'Eliminar',\r\n        cancelButtonText: 'Cerrar'\r\n      }\r\n    ).then(async value => {\r\n      if (value.value) {\r\n        await Delete(id).then(value => {\r\n          Swal.fire('Eliminado', 'Actualiza para ver cambios', 'success');\r\n        }).catch(err => {\r\n          Swal.fire('Error', err, 'error');\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //Metodo donde se obtiene todo\r\n  async GetAll() {\r\n    await Get().then(Docs => {\r\n      Docs.Status == 200 ? this.setState({ Teams: Docs.Message }) : Swal('Error', 'Ha ocurrido un error vuelva a recargar', 'error');\r\n    });\r\n  }\r\n\r\n  //Obtengo todos los valores\r\n  async componentWillMount() {\r\n    await this.GetAll();\r\n  }\r\n\r\n  //Renderizo la vista\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar-fixed grey darken-4\">\r\n          <div className=\"nav-wrapper\">\r\n            <a href=\"/\" className=\"brand-logo left Titulo\">\r\n              RegeTeam\r\n            </a>\r\n            <ul className=\"right\">\r\n              <li>\r\n                <a onClick={this.Hola}>\r\n                  <i className=\"material-icons\" onClick={this.AddTeam.bind(this)}>add</i>\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a onClick={async () => await this.GetAll()}>\r\n                  <i className=\"material-icons\">update</i>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n        <div className=\"container center-align\">\r\n          <div className=\"row center-align\">\r\n            {this.state.Teams.map((item, i) => {\r\n              return (\r\n                <Card Nombre={item.Nombre} Estadio={item.Estadio} UrlEscudo={item.UrlEscudo} UrlEstadio={item.UrlEstadio} Id={item.Id} key={i} />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}